spring.application.name=springSecurity

spring.datasource.url=jdbc:mysql://localhost:3303/devanshu
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver



security.oauth2.client.clientId = <CLIENT_ID>
security.oauth2.client.clientSecret = <CLIENT_SECRET>
security.oauth2.client.accessTokenUri = https://www.googleapis.com/oauth2/v3/token
security.oauth2.client.userAuthorizationUri = https://accounts.google.com/o/oauth2/auth
security.oauth2.client.tokenName = oauth_token
security.oauth2.client.authenticationScheme = query
security.oauth2.client.clientAuthenticationScheme = form
security.oauth2.client.scope = profile email

security.oauth2.resource.userInfoUri = https://www.googleapis.com/userinfo/v2/me
security.oauth2.resource.preferTokenInfo = false


## Newer Version
## OAuth2 Client Config
#spring.security.oauth2.client.registration.google.client-id=YOUR_CLIENT_ID
#spring.security.oauth2.client.registration.google.client-secret=YOUR_CLIENT_SECRET
#spring.security.oauth2.client.registration.google.scope=openid,profile,email
#
## Provider details (Spring Boot auto-configures common ones like Google, GitHub)
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
#spring.security.oauth2.client.provider.google.user-name-attribute=sub
#
#
## Resource Server Config (JWT validation)
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://YOUR_AUTH_SERVER/.well-known/openid-configuration
## OR
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://YOUR_AUTH_SERVER/oauth2/default/v1/keys


#spring.security.oauth2.client.registration.google.client-id=<CLIENT_ID>
#spring.security.oauth2.client.registration.google.client-secret=<CLIENT_SECRET>
#spring.security.oauth2.client.registration.google.scope=profile,email
#
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v3/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/userinfo/v2/me
#spring.security.oauth2.client.provider.google.user-name-attribute=email

